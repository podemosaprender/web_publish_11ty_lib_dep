---
title: ShadowAgency
data:
---
{% import "o-o/macros.njk" as tw with context %}

{% set content %}
<div style="color: #000; margin-top: 40px;">
	<h1 class="h4">Discover the Archetype</h1>
	<div style="min-height: 70vh">
	<ul id="o_hint">
	</ul>
	<div id="o_result"></div>
	</div>
	<div>
		<button id="b_hint">(hint)</button>
		{% for k,v in items %}
			<button id="b_{{k}}">{{k}}</button>
		{% endfor %}
	</div>
</div>
<script>
	const $= (s) => document.querySelector(s)
	const rnd_element = (list) => list[Math.floor(Math.random()*list.length)];
	const rnd_mix = (list) => { 
		let c= [...list]; let r= []; while (c.length) { r.unshift(rnd_element(c)); c= c.filter(e => e!=r[0]) }
		return r;
	}

	const data=#O-O#INCLUDE#archetype.json# 
	const archs= data.items;
	const arch_names= Object.keys(archs);	

	let goal_name;
	let hints;
	const game= () => {
		if (!hints) {
			$('#o_result').innerHTML=''; $('#o_hint').innerHTML=''; 
			goal_name= rnd_element(arch_names);
			let goal= archs[goal_name];
			let fears= rnd_mix( goal.Fears.toLowerCase().split(/,\s*/) ).map(w => ('fears '+w))
			let traits= rnd_mix( goal.Traits.toLowerCase().split(/,\s*/) ).map(w => (w+' may be a trait'))
			let style= rnd_mix( goal['Branding style'].toLowerCase().split(/,\s*(?:and\s)?/) ).map(w => ('wants to be seen as '+w))
			
			hints= rnd_mix([...fears,...traits, ...style]);
		}
		return hints;
	}
	const restart_game= (msg) => { 
		if (goal_name) { $("#o_result").innerHTML= `${msg} The Archetype is <a href="../${goal_name.toLowerCase()}/">${goal_name}</a> and desires ${archs[goal_name].Desire}` }
		hints=null; 
	}
	const show_hint= () => { 
		let hint= game().pop();
		if (hint)  { $('#o_hint').innerHTML+=`<li>ðŸ‘€.fyi: ${hint}</li>`; }
		else { restart_game("No more hints") }
	}

	$('#b_hint').onclick= show_hint;
	arch_names.forEach(k => { $('#b_'+k).onclick= () => {
		if (k==goal_name) { restart_game("Correct!"); }
		else { show_hint() }
	}});	
</script>
{% endset %}

{{ tw.r(data,content) }}

